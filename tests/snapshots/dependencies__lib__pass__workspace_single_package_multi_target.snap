---
source: tests/dependencies.rs
expression: output
---
STDERR:

STDOUT:
digraph {

    graph [
        label="package_multi_target",
        labelloc=t,

        pad=0.4,

        // Consider rendering the graph using a different layout algorithm, such as:
        // [dot, neato, twopi, circo, fdp, sfdp]
        layout=neato,
        overlap=false,
        splines="line",
        rankdir=LR,

        fontname="Helvetica", 
        fontsize="36",
    ];

    node [
        fontname="monospace",
        fontsize="10",
        shape="record",
        style="filled",
    ];

    edge [
        fontname="monospace",
        fontsize="10",
    ];

    "bool" [label="external builtin|bool", fillcolor="#81c169"]; // "builtin" node
    "core::fmt::Arguments" [label="external struct|core::fmt::Arguments", fillcolor="#81c169"]; // "struct" node
    "core::option::Option" [label="external enum|core::option::Option", fillcolor="#81c169"]; // "enum" node
    "core::panicking::AssertKind" [label="external enum|core::panicking::AssertKind", fillcolor="#81c169"]; // "enum" node
    "i32" [label="external builtin|i32", fillcolor="#81c169"]; // "builtin" node
    "package_multi_target" [label="crate|package_multi_target", fillcolor="#5397c8"]; // "crate" node
    "package_multi_target::tests" [label="pub(crate) mod|package_multi_target::tests", fillcolor="#f8c04c"]; // "mod" node
    "package_multi_target::tests::it_works" [label="pub(self) fn|package_multi_target::tests::it_works", fillcolor="#db5367"]; // "fn" node

    "package_multi_target" -> "package_multi_target::tests" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "package_multi_target::tests" -> "package_multi_target::tests::it_works" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "package_multi_target::tests::it_works" -> "bool" [label="uses", color="#7f7f7f", style="dashed"] [constraint=false]; // "uses" edge
    "package_multi_target::tests::it_works" -> "core::fmt::Arguments" [label="uses", color="#7f7f7f", style="dashed"] [constraint=false]; // "uses" edge
    "package_multi_target::tests::it_works" -> "core::option::Option" [label="uses", color="#7f7f7f", style="dashed"] [constraint=false]; // "uses" edge
    "package_multi_target::tests::it_works" -> "core::panicking::AssertKind" [label="uses", color="#7f7f7f", style="dashed"] [constraint=false]; // "uses" edge
    "package_multi_target::tests::it_works" -> "i32" [label="uses", color="#7f7f7f", style="dashed"] [constraint=false]; // "uses" edge

}

