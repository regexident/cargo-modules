---
source: tests/generate_graph.rs
expression: output
---
STDERR:

STDOUT:
digraph {

    graph [
        label="tuple_fields",
        labelloc=t,

        pad=0.4,

        // Consider rendering the graph using a different layout algorithm, such as:
        // [dot, neato, twopi, circo, fdp, sfdp]
        layout=neato,
        overlap=false,
        splines="line",
        rankdir=LR,

        fontname="Helvetica", 
        fontsize="36",
    ];

    node [
        fontname="monospace",
        fontsize="10",
        shape="record",
        style="filled",
    ];

    edge [
        fontname="monospace",
        fontsize="10",
    ];

    "tuple_fields" [label="crate|tuple_fields", fillcolor="#5397c8"]; // "crate" node
    "tuple_fields::DynTrait" [label="pub(crate) trait|tuple_fields::DynTrait", fillcolor="#f8c04c"]; // "trait" node
    "tuple_fields::GenericTargetEnum" [label="pub(crate) enum|tuple_fields::GenericTargetEnum", fillcolor="#f8c04c"]; // "enum" node
    "tuple_fields::GenericTargetStruct" [label="pub(crate) struct|tuple_fields::GenericTargetStruct", fillcolor="#f8c04c"]; // "struct" node
    "tuple_fields::GenericTargetUnion" [label="pub(crate) union|tuple_fields::GenericTargetUnion", fillcolor="#f8c04c"]; // "union" node
    "tuple_fields::TargetEnum" [label="pub(crate) enum|tuple_fields::TargetEnum", fillcolor="#f8c04c"]; // "enum" node
    "tuple_fields::TargetStruct" [label="pub(crate) struct|tuple_fields::TargetStruct", fillcolor="#f8c04c"]; // "struct" node
    "tuple_fields::TargetTrait" [label="pub(crate) trait|tuple_fields::TargetTrait", fillcolor="#f8c04c"]; // "trait" node
    "tuple_fields::TargetUnion" [label="pub(crate) union|tuple_fields::TargetUnion", fillcolor="#f8c04c"]; // "union" node

    "tuple_fields" -> "tuple_fields::DynTrait" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::GenericTargetEnum" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::GenericTargetStruct" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::GenericTargetUnion" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::TargetEnum" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::TargetStruct" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::TargetTrait" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "tuple_fields" -> "tuple_fields::TargetUnion" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge

}

