---
source: tests/generate_tree.rs
expression: output
---
crate smoke
├── mod hierarchy: pub(crate)
│   └── mod lorem: pub(self)
│       ├── mod consectetur: pub(self)
│       │   └── mod adipiscing: pub(self)
│       │       └── mod elit: pub(self)
│       ├── mod dolor: pub(self)
│       │   └── mod sit: pub(self)
│       │       └── mod amet: pub(self)
│       └── mod ipsum: pub(self)
├── mod orphans: pub(crate)
├── mod uses: pub(crate)
│   └── mod cycle: pub(self)
│       ├── mod node_0: pub(self)
│       └── mod node_1: pub(self)
│           └── mod node_2: pub(self)
└── mod visibility: pub(crate)
    ├── mod enums: pub(self)
    │   ├── enum PubCrate: pub(crate)
    │   ├── enum PubModule: pub
    │   ├── enum PubPrivate: pub(self)
    │   ├── enum PubPublic: pub
    │   └── enum PubSuper: pub(super)
    ├── mod fns: pub(self)
    │   ├── fn pub_crate: pub(crate)
    │   ├── fn pub_module: pub
    │   ├── fn pub_private: pub(self)
    │   ├── fn pub_public: pub
    │   └── fn pub_super: pub(super)
    ├── mod mods: pub(self)
    │   ├── mod pub_crate: pub(crate)
    │   ├── mod pub_module: pub
    │   ├── mod pub_private: pub(self)
    │   ├── mod pub_public: pub
    │   └── mod pub_super: pub(super)
    ├── mod structs: pub(self)
    │   ├── struct PubCrate: pub(crate)
    │   ├── struct PubModule: pub
    │   ├── struct PubPrivate: pub(self)
    │   ├── struct PubPublic: pub
    │   └── struct PubSuper: pub(super)
    └── mod unions: pub(self)
        ├── union PubCrate: pub(crate)
        ├── union PubModule: pub
        ├── union PubPrivate: pub(self)
        ├── union PubPublic: pub
        └── union PubSuper: pub(super)

