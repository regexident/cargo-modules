---
source: tests/structure.rs
expression: output
---
CMD:
structure
--no-types

STDERR:

STDOUT:

crate smoke
├── mod derives: pub(crate)
├── mod functions: pub(crate)
│   ├── fn body: pub(self)
│   ├── fn inputs: pub(self)
│   └── fn outputs: pub(self)
├── mod hierarchy: pub(crate)
│   └── mod lorem: pub(self)
│       ├── mod consectetur: pub(self)
│       │   └── mod adipiscing: pub(self)
│       │       └── mod elit: pub(self)
│       ├── mod dolor: pub(self)
│       │   └── mod sit: pub(self)
│       │       └── mod amet: pub(self)
│       └── mod ipsum: pub(self)
├── mod methods: pub(crate)
├── mod target: pub(crate)
├── mod uses: pub(crate)
│   └── mod cycle: pub(self)
│       ├── mod node_0: pub(self)
│       └── mod node_1: pub(self)
│           └── mod node_2: pub(self)
└── mod visibility: pub(crate)
    └── mod dummy: pub(self)
        ├── mod enums: pub(self)
        ├── mod fns: pub(self)
        │   ├── fn pub_crate: pub(crate)
        │   ├── fn pub_module: pub(in crate::visibility)
        │   ├── fn pub_private: pub(self)
        │   ├── fn pub_public: pub
        │   └── fn pub_super: pub(super)
        ├── mod kinds: pub(self)
        │   ├── async fn AsyncFunction: pub(self)
        │   ├── const fn ConstFunction: pub(self)
        │   ├── fn Function: pub(self)
        │   ├── mod Module: pub(self)
        │   ├── trait Trait: pub(self)
        │   ├── unsafe fn UnsafeFunction: pub(self)
        │   └── unsafe trait UnsafeTrait: pub(self)
        ├── mod mods: pub(self)
        │   ├── mod pub_crate: pub(crate)
        │   ├── mod pub_module: pub(in crate::visibility)
        │   ├── mod pub_private: pub(self)
        │   ├── mod pub_public: pub
        │   └── mod pub_super: pub(super)
        ├── mod structs: pub(self)
        ├── mod traits: pub(self)
        │   ├── mod r#unsafe: pub(self)
        │   │   ├── unsafe trait PubCrate: pub(crate)
        │   │   ├── unsafe trait PubModule: pub(in crate::visibility)
        │   │   ├── unsafe trait PubPrivate: pub(self)
        │   │   ├── unsafe trait PubPublic: pub
        │   │   └── unsafe trait PubSuper: pub(super)
        │   └── mod safe: pub(self)
        │       ├── trait PubCrate: pub(crate)
        │       ├── trait PubModule: pub(in crate::visibility)
        │       ├── trait PubPrivate: pub(self)
        │       ├── trait PubPublic: pub
        │       └── trait PubSuper: pub(super)
        └── mod unions: pub(self)
